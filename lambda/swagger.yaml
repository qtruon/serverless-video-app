swagger: '2.0'
info:
  description: 'This is a sample API for video transcoder.'
  version: '1.0.0'
  title: AutoGate Admin Service Management Gateway

paths:
  /get-user-info:
    get:
      parameters:
        - in: query
          name: accessToken
          schema:
            type: string
        - in: header
          name: Authorization
          schema:
            type: string
      responses:
        200:
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetUserInfo.Arn}/invocations' #GetUserInfo.Arn
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        httpMethod: POST #always POST
        type: aws_proxy
    options:
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: '200 response'
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      security:
        - NONE: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: when_no_match
        type: mock
  /create-presigned-url:
    get:
      parameters:
        - in: query
          name: filename
          schema:
            type: string
        - in: query
          name: filetype
          schema:
            type: string
        - in: header
          name: Authorization
          schema:
            type: string
      responses:
        200:
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreatePostURL.Arn}/invocations' #CreatePostURL.Arn
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        httpMethod: POST #always POST
        type: aws_proxy
    options:
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: '200 response'
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      security:
        - NONE: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: when_no_match
        type: mock

definitions:
  Empty:
    type: object
    title: Empty Schema